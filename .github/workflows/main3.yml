name: Industrialisation continue sur le serveur AWS (Tomcat)
on: push
jobs:
  build:
    name: Package AWS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: |
          jar cvf jessica.war *
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DNS }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.MY_PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "jessica.war"
        target: "/opt/tomcat/webapps"

  deploy:
    name: SAV IPFS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - run: |
          jar cvf jessica.war *
      - uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
      - run: |
          apk add go-ipfs
          ipfs init
          ipfs daemon &
        shell: alpine.sh --root {0}
      - name: Sauvegarde fichier war sur IPFS
        run: |
          ls -la 
          ipfs swarm peers
          ipfs add jessica.war > ipfs_key.txt
        shell: alpine.sh --root {0}
      - name: Notification Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          ipfs_key=$(cat ipfs_key.txt | awk '{print $2}')
          curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"Le workfl-owo IPFS est terminé. Clé IPFS : $ipfs_key\"}" $DISCORD_WEBHOOK
  setup_and_backup:
    name: Setup SSH and Backup Database
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v2
      
      
      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CLE }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.DNS }} >> ~/.ssh/known_hosts
      
      
      - name: Create SSH Tunnel
        run: |
          ssh -i ~/.ssh/id_rsa -L 3307:127.0.0.1:3306 admin@${{ secrets.DNS }} -N &
          SSH_TUNNEL_PID=$!
          sleep 10
          if ps -p $SSH_TUNNEL_PID > /dev/null; then
            echo "SSH tunnel established, PID: $SSH_TUNNEL_PID"
          else
            echo "SSH tunnel failed"
            exit 1    
          fi
      
 
      - name: Dump MySQL Database
        env:
          MYSQL_PWD: ${{ secrets.MYSQLDUMP_PASSWORD }}
        run: |
          mysqldump -ucnam -h127.0.0.1 -P3307 --password="${MYSQL_PWD}" films > sauvegarde_films.sql
          if [ $? -ne 0 ]; then
            echo "Failed to dump MySQL"
            exit 1
          fi
      

      - name: Kill SSH Tunnel
        if: always()
        run: |
          kill $SSH_TUNNEL_PID || echo "SSH tunnel fin."
          
      - name: Install IPFS
        run: |
          wget https://dist.ipfs.io/go-ipfs/v0.9.1/go-ipfs_v0.9.1_linux-amd64.tar.gz
          tar xvfz go-ipfs_v0.9.1_linux-amd64.tar.gz
          cd go-ipfs
          sudo bash install.sh
          ipfs init
      

      - name: Add to IPFS
        run: |
          ipfs daemon --init &
          sleep 10
          ipfs add sauvegarde_films.sql > ipfs_key.txt
      - name: Notification Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          ipfs_key=$(cat ipfs_key.txt | awk '{print $2}')
          curl -X POST -H "Content-Type: application/json" -d "{\"content\": \" Le workfl-owo IPFS est terminé. Clé IPFS : $ipfs_key\"}" $DISCORD_WEBHOOK
